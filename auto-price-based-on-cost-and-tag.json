[{"name":"Auto-price Tiles based on their cost","options":{"multiplier_when_calculating_price__number_required":"1.25","product_tag_to_monitor":"Tiles","only_process_active_products__boolean":false,"run_automatically_for_product_updates__boolean":false,"run_daily__boolean":null,"test_mode__boolean":false},"script":"{% assign multiplier_when_calculating_price = options.multiplier_when_calculating_price__number_required %}\n{% assign product_tag_to_monitor = options.product_tag_to_monitor %}\n{% assign only_process_active_products = options.only_process_active_products__boolean %}\n{% assign run_automatically_for_product_updates = options.run_automatically_for_product_updates__boolean %}\n{% assign run_daily = options.run_daily__boolean %}\n{% assign test_mode = options.test_mode__boolean %}\n\n{% if multiplier_when_calculating_price < 0 %}\n  {% error \"Price multiplier must be at least 0. :)\" %}\n{% endif %}\n\n{% assign search_query = nil %}\n\n{% if only_process_active_products %}\n  {% assign search_query = \"product_status:active\" %}\n{% endif %}\n\n{% if product_tag_to_monitor != blank %}\n  {%- capture search_query -%}\n    {{ search_query }} tag:{{ product_tag_to_monitor | json }}\n  {%- endcapture -%}\n{% endif %}\n\n{% if event.topic == \"shopify/products/update\" %}\n  {%- capture search_query -%}\n    product_id:{{ product.id }} {{ search_query }}\n  {%- endcapture -%}\n{% endif %}\n\n{% unless event.preview %}\n  {% log search_query: search_query %}\n{% endunless %}\n\n{% assign summaries = array %}\n{% assign variant_inputs_by_product = hash %}\n\n{% assign cursor = nil %}\n\n{% for n in (0..200) %}\n  {% capture query %}\n    query {\n      productVariants(\n        first: 250\n        after: {{ cursor | json }}\n        query: {{ search_query | json }}\n      ) {\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        nodes {\n          id\n          displayName\n          sku\n          price\n          inventoryItem {\n            unitCost {\n              amount\n            }\n          }\n          product {\n            id\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"productVariants\": {\n            \"nodes\": [\n              {\n                \"id\": \"gid://shopify/ProductVariant/1234567890\",\n                \"displayName\": \"Widget\",\n                \"sku\": \"WDGT\",\n                \"price\": \"99.00\",\n                \"inventoryItem\": {\n                  \"unitCost\": {\n                    \"amount\": \"50.00\"\n                  }\n                },\n                \"product\": {\n                  \"id\": \"gid://shopify/Product/1234567890\"\n                }\n              }\n            ]\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% for variant in result.data.productVariants.nodes %}\n    {% assign cost = variant.inventoryItem.unitCost.amount | times: 1 %}\n    {% assign price = variant.price | times: 1 %}\n\n    {% if cost == blank %}\n      {% continue %}\n    {% endif %}\n\n    {% assign desired_price\n      = cost\n      | times: multiplier_when_calculating_price\n      | round: 2\n    %}\n\n    {% if desired_price != price %}\n      {% if test_mode %}\n        {% assign summary = hash %}\n        {% assign summary[\"id\"] = variant.id %}\n        {% assign summary[\"displayName\"] = variant.displayName | remove: \" - Default Title\" %}\n        {% assign summary[\"sku\"] = variant.sku %}\n        {% assign summary[\"cost\"] = cost %}\n        {% assign summary[\"current_price\"] = price %}\n        {% assign summary[\"desired_price\"] = desired_price %}\n        {% assign summaries = summaries | push: summary %}\n\n      {% else %}\n        {% assign variant_input = hash %}\n        {% assign variant_input[\"id\"] = variant.id %}\n        {% assign variant_input[\"price\"] = desired_price | append: \"\" %}\n        {% assign variant_inputs_by_product[variant.product.id]\n          = variant_inputs_by_product[variant.product.id]\n          | default: array\n          | push: variant_input\n        %}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {% if result.data.productVariants.pageInfo.hasNextPage %}\n    {% assign cursor = result.data.productVariants.pageInfo.endCursor %}\n  {% else %}\n    {% break %}\n  {% endif %}\n{% endfor %}\n\n{% for keyval in variant_inputs_by_product %}\n  {% action \"shopify\" %}\n    mutation {\n      productVariantsBulkUpdate(\n        productId: {{ keyval[0] | json }},\n        variants: {{ keyval[1] | graphql_arguments }}\n      ) {\n        userErrors {\n          code\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% else %}\n  {% log \"No variants qualified to be updated on this task run.\" %}\n{% endfor %}\n\n{% if summaries != blank %}\n  {% log\n    test_mode: test_mode,\n    variants_to_be_updated: summaries\n  %}\n{% endif %}\n","subscriptions":["mechanic/user/trigger"],"online_store_javascript":null,"order_status_javascript":null,"docs":"Use this task when the pricing for your products can be automatically calculated by multiplying with compare-at prices.\n\nRun this task manually to process your entire product catalog, optionally filtering by active products or product tag. You may also choose to have this task run whenever products are updated, or run daily, at midnight in your store's local timezone.","subscriptions_template":"{% if options.run_automatically_for_product_updates__boolean %}\n  shopify/products/update\n{% endif %}\n{% if options.run_daily__boolean %}\n  mechanic/scheduler/daily\n{% endif %}\nmechanic/user/trigger","shopify_api_version":"2025-01","perform_action_runs_in_sequence":false,"halt_action_run_sequence_on_error":false,"preview_event_definitions":[]}]